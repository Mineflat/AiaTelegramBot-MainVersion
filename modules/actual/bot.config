# Рабочая директория бота, в которой будут храниться его временные файлы: 
# логи, история переписки, список имен пользователей (если не запрещено)
WorkingDirectory="/srv/"
# Путь до файла со списком числовых идентификаторов пользователей Телеграмм, 
# которые являются администраторами бота. 
# Если не задан или задан пустой файл, никто из пользователей не может использовать
# команды, помеченные как "IsAdmin": "true"
WhitelistLocation=""
# Указывает, что бот может сохранять переписку на диск.
# Если разрешено, то бот сохранит переписку в директории [WorkingDirectory]/Conversation/[ID_чата]*
StoreConversationStory=false
# Указывает, что бот может сохранять имена пользователей, которые ему пишут, на диск.
# Если разрешено, то бот сохранит идентификаторы пользователей в файл [WorkingDirectory]/[имя_бота]_uuids.txt
StoreNewUsernames=false
# Указывает, что бот может сохранять файл истории, на диск.
# Если разрешено, то бот будет писать историю сообщений (лог) в файл [WorkingDirectory]/[имя_бота].log
StoreLogs=true
# Указывает на директорию со списком действий.
# Каждый отдельный файл в директории яволяется действием, описанным в формате JSON. 
# Например:
# {
#   "name": "имя_действия",     # Псевдоним действия
#   "keyword": "имя",           # Указывает команду бота, по которой вызывается это действие
#   "is_active": "true/false",  # Указывает, может ли быть вызван этот метод
#   "is_admin": "true/false",   # Указывает, что метод вызывает только администратор из белого списка
#   "type": "random_str",       # Указывает, какой тип команды используется: random_str, file, image, script 
#                                   text:  Ожидает, что в JSON-файле - только массив элементов c полем "text"
#                                       Метод выбирает рандомный элемент и отправляет содержимое поля "text"
#                                   file:  Отправит указанный файл в чат 
#                                   random_image: Отправит указанную картинку в чат
#                                   script Запустит указанный скрипт, дождется его окончания и отправит его вывод 
#                                       (std_out) в чат
#   "Location": "файл"          # Указывает, с каким конкретно файлом производить действие типа "Type"
# }
ActionsDirectory=""
# Список команд администратора:
# - actions - Посмотреть список всех дейсчтвий, которые пропарсил бот
# - update - Обновить список дейсчтвий, которые лежат в директории ActionsDirectory
# - info - Получить информацию о настройках бота 
# - status - Получить информацию о кол-ве обработанных ботом сообщений, их авторов и пользователях из белого списка 
#   формат: [username]:[msgs_count]
# - stop - немедленная остановка бота
# - restart - выполняет остановку и запуск бота, при этом вызывается команда update
#   Обратите внимание, что для перезапуска необходим повторный ввод токена бота

---------- Содержание файла: ----------
---------------------------------------

---------- Содержание файла: ----------\n{content}\n---------------------------------------